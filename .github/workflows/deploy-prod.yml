name: Deploy Prod
on:
  workflow_dispatch:
    inputs:
      branch_name:
          description: 'Name of the branch'
          required: true
          default: 'production'

  pull_request:
    types: [closed]
    branches:
      - production
    paths-ignore:
      - docs/**
      - README.md
env:
  BRANCH_NAME: '${{ github.event.inputs.branch_name || github.head_ref || github.ref_name  }}'
  NODE_VERSION: 16
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: 'adopt'

jobs:
  test-unit:
    name: Unit tests
    runs-on: [ self-hosted, standard ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup .npmrc
        uses: bduff9/use-npmrc@v1.1
        with:
            dot-npmrc: ${{ secrets.DOT_NPMRC }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "Running tests"

  test-lint:
    name: Lint
    runs-on: [ self-hosted, standard ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Setup .npmrc
        uses: bduff9/use-npmrc@v1.1
        with:
            dot-npmrc: ${{ secrets.DOT_NPMRC }}

      - name: Install dependencies
        run: npm install

      - name: Lint tests
        run: npm run lint

  build-deploy-prod:
    name: Deploy-Prod
    needs: [test-lint, test-unit]
    if: ${{ github.ref_name == 'production' && github.event.pull_request.merged == true }}
    runs-on: [ self-hosted, standard ]
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Install dependencies
        run: npm install

      - name: Call the build bash script for Prod
        id: build
        run:  bash ${GITHUB_WORKSPACE}/deployment/build-prod.sh

      - name: Sync S3 Builds
        id: s3syncbuilds
        if: steps.build.outcome == 'success'
        run: aws s3 sync ./dist s3://branch-builds/connected-sdk/

      - name: Sync S3 CDN
        id: s3synccdn
        if: steps.s3syncbuilds.outcome == 'success'
        run: aws s3 cp ./dist/branch-connected.min.js s3://branch-cdn/branch-connected.min.js

      - name: Remove npmrc
        run: rm -f ~/.npmrc

      - name: publish
        if: steps.s3synccdn.outcome == 'success'
        uses: JS-DevTools/npm-publish@v1
        with:
         token: ${{ secrets.NPM_TOKEN }}


